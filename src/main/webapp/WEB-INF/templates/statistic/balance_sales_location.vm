<div class="row">
    <div class="col-md-6">
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title">联璧激活位置信息(一年)</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse"><i
                            class="fa fa-minus"></i></button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i
                            class="fa fa-times"></i></button>
                </div>
            </div>
            <div class="box-body">
                <div class="chart">
                    <canvas id="activeLocationYearChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title">联璧激活位置信息(30天)</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse"><i
                            class="fa fa-minus"></i></button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i
                            class="fa fa-times"></i></button>
                </div>
            </div>
            <div class="box-body">
                <div class="chart">
                    <canvas id="activeLocationMonthChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title">电子秤位置信息(一年)</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse"><i
                            class="fa fa-minus"></i></button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i
                            class="fa fa-times"></i></button>
                </div>
            </div>
            <div class="box-body">
                <div class="chart">
                    <canvas id="locationYearChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title">电子秤位置信息(30天)</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse"><i
                            class="fa fa-minus"></i></button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i
                            class="fa fa-times"></i></button>
                </div>
            </div>
            <div class="box-body">
                <div class="chart">
                    <canvas id="locationMonthChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="$baseUrl/resources/plugins/jQuery/jquery-2.2.3.min.js"></script>
<script src="$baseUrl/resources/bootstrap/js/bootstrap.min.js"></script>
<script src="$baseUrl/resources/plugins/chartjs/Chart.min.js"></script>
<script src="$baseUrl/resources/plugins/fastclick/fastclick.js"></script>
<script src="$baseUrl/resources/dist/js/app.min.js"></script>
<script src="$baseUrl/resources/dist/js/demo.js"></script>
<script>
    $(function obtainLocationInfoByDay() {
        $.ajax({
            type: "POST",
            url: "$baseUrl/balance/location/day",
            dataType: "json",
            data: {
                "day": 30,
                "type": "balance"
            },
            error: function (req, status, err) {
                alert('Failed reason: ' + err);
            }, success: function (data) {
                var result = data;
                var labels = new Array();
                var dates = new Array();
                for (var key in data) {
                    if (data.hasOwnProperty(key)) {
                        labels.push(key);
                        dates.push(data[key]);
                    }
                }
                var barChartCavas = $("#locationMonthChart").get(0).getContext("2d");
                var barChart = new Chart(barChartCavas);
                drawBarChart(labels, dates, barChart);
            }
        })
    })

    $(function obtainLocationYearData() {
        $.ajax({
            type: "POST",
            url: "$baseUrl/balance/location/month",
            dataType: "json",
            data: {
                "month": 12,
                "type": "balance"
            },
            error: function (req, status, err) {
                alert('Failed reason: ' + err);
            }, success: function (data) {
                var result = data;
                var labels = new Array();
                var dates = new Array();
                for (var key in data) {
                    if (data.hasOwnProperty(key)) {
                        labels.push(key);
                        dates.push(data[key]);
                    }
                }
                var barChartCavas = $("#locationYearChart").get(0).getContext("2d");
                var barChart = new Chart(barChartCavas);
                drawBarChart(labels, dates, barChart);
            }
        })
    })

    $(function obtainActiveLocationInfoByDay() {
        $.ajax({
            type: "POST",
            url: "$baseUrl/balance/location/day",
            dataType: "json",
            data: {
                "day": 30,
                "type": "lianbi"
            },
            error: function (req, status, err) {
                alert('Failed reason: ' + err);
            }, success: function (data) {
                var result = data;
                var labels = new Array();
                var dates = new Array();
                for (var key in data) {
                    if (data.hasOwnProperty(key)) {
                        labels.push(key);
                        dates.push(data[key]);
                    }
                }
                var barChartCavas = $("#activeLocationMonthChart").get(0).getContext("2d");
                var barChart = new Chart(barChartCavas);
                drawBarChart(labels, dates, barChart);
            }
        })
    })

    $(function obtainActiveLocationYearData() {
        $.ajax({
            type: "POST",
            url: "$baseUrl/balance/location/month",
            dataType: "json",
            data: {
                "month": 12,
                "type": "lianbi"
            },
            error: function (req, status, err) {
                alert('Failed reason: ' + err);
            }, success: function (data) {
                var result = data;
                var labels = new Array();
                var dates = new Array();
                for (var key in data) {
                    if (data.hasOwnProperty(key)) {
                        labels.push(key);
                        dates.push(data[key]);
                    }
                }
                var barChartCavas = $("#activeLocationYearChart").get(0).getContext("2d");
                var barChart = new Chart(barChartCavas);
                drawBarChart(labels, dates, barChart);
            }
        })
    })

    function drawBarChart(labes, datas, chart) {
        var chartDataArea = {
            labels: labes,
            datasets: [
                {
                    fillColor: "rgba(151,187,205,0.5)",
                    strokeColor: "rgba(151,187,205,1)",
                    data: datas
                }
            ]
        };

        var chartOption = {
            //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
            scaleBeginAtZero: true,
            //Boolean - 是否显示网格线
            scaleShowGridLines: false,
            //String - 网格颜色
            scaleGridLineColor: "#000000",
            //Number - 网格线宽度
            scaleGridLineWidth: 1,
            //Boolean - 是否显示水平线（不含x轴）
            scaleShowHorizontalLines: true,
            //Boolean - 是否显示垂直线（不含y轴）
            scaleShowVerticalLines: true,
            scaleLineColor: "#000000",
            //Boolean - If there is a stroke on each bar
            barShowStroke: true,
            //字体颜色
            scaleFontColor: "#000000",
            scaleFontFamily: " 'Arial' ,'Microsoft YaHei'",
            //字体大小
            /*            scaleFontSize:13,
                        //字体
                        scaleFontFamily : "'Microsoft Yahei'",*/
            //字体风格
            scaleFontStyle: "500",
            //Number - Pixel width of the bar stroke
            barStrokeWidth: 1,
            //Number - Spacing between each of the X value sets
            barValueSpacing: 5,
            //Number - Spacing between data sets within X values
            barDatasetSpacing: 1,
            //String - 示例模板
            legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++)" +
            "{%><li><span style=\"background-color:<%=datasets[i].fillColor%>\"></span><%if(datasets[i].label){%>" +
            "<%=datasets[i].label%><%}%></li><%}%></ul>",
            //Boolean - whether to make the chart responsive
            responsive: true,
            maintainAspectRatio: true,
            //是否显示动画
            animation: true,
            //Number - Number of animation steps
            animationSteps: 60,
            //String - Animation easing effect
            animationEasing: "easeOutQuart",
            showTooltips: false,
            onAnimationComplete: function () {
                var ctx = this.chart.ctx;
                ctx.font = this.scale.font;
                ctx.fillStyle = this.scale.textColor
                ctx.textAlign = "center";
                ctx.textBaseline = "bottom";
                this.datasets.forEach(function (dataset) {
                    dataset.bars.forEach(function (bar) {
                        ctx.fillText(bar.value, bar.x, bar.y);
                    });
                });
            }
        };
        var barChartOptions = chartOption;
        var barChartData = chartDataArea;
        barChartData.datasets[0].fillColor = "#4096B5";
        barChartData.datasets[0].strokeColor = "#4096B5";
        barChartData.datasets[0].pointColor = "#4096B5";
        barChartOptions.datasetFill = false;
        chart.Bar(chartDataArea, barChartOptions);
    }
</script>