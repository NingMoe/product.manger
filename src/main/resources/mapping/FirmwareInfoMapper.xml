<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.phicomm.product.manger.dao.FirmwareInfoMapper">

    <select id="exist" resultType="java.lang.Boolean">
        SELECT
            count(1)
        FROM
            firmware_info
        WHERE
            (
                firmware_type = #{firmwareType,jdbcType=VARCHAR}
                AND hardware_code = #{hardwareCode,jdbcType=VARCHAR}
                AND environment = #{environment,jdbcType=VARCHAR}
                AND version = #{version,jdbcType=VARCHAR}
            )
            OR (
                firmware_type = #{firmwareType,jdbcType=VARCHAR}
                AND hardware_code = #{hardwareCode,jdbcType=VARCHAR}
                AND environment = #{environment,jdbcType=VARCHAR}
                AND version_code = #{versionCode,jdbcType=INTEGER}
            )
    </select>

    <insert id="insert" parameterType="com.phicomm.product.manger.model.firmware.FirmwareInfo">
        INSERT INTO firmware_info (
            firmware_type, version,
            version_code, environment,
            hardware_code, `enable`,
            create_time, url,
            description
        )
        VALUES (
            #{firmwareInfo.firmwareType,jdbcType=VARCHAR}, #{firmwareInfo.version,jdbcType=VARCHAR},
            #{firmwareInfo.versionCode,jdbcType=INTEGER}, #{firmwareInfo.environment,jdbcType=VARCHAR},
            #{firmwareInfo.hardwareCode,jdbcType=VARCHAR}, #{firmwareInfo.enable,jdbcType=INTEGER},
            now(), #{firmwareInfo.url,jdbcType=LONGVARCHAR}, #{firmwareInfo.description,jdbcType=LONGVARCHAR}
        )
    </insert>

    <select id="getFirmwareInfoList" resultType="com.phicomm.product.manger.model.firmware.FirmwareInfo">
        (
            SELECT
                id,
                firmware_type AS firmwareType,
                version,
                version_code AS versionCode,
                hardware_code AS hardwareCode,
                `enable`
            FROM
                firmware_info
            WHERE
                environment = #{environment,jdbcType=VARCHAR}
            ORDER BY
                create_time DESC
            LIMIT 200
        )
        UNION
        (
            SELECT
                id,
                firmware_type AS firmwareType,
                version,
                version_code AS versionCode,
                hardware_code AS hardwareCode,
                `enable`
            FROM
                firmware_info
            WHERE
                environment = #{environment,jdbcType=VARCHAR}
                AND `enable` = 1
        )
    </select>

    <select id="getFirmwareDetail" resultType="com.phicomm.product.manger.model.firmware.FirmwareInfo">
        SELECT
            id AS id,
            firmware_type AS firmwareType,
            version AS version,
            version_code AS versionCode,
            environment AS environment,
            hardware_code AS hardwareCode,
            url AS url,
            `enable` AS `enable`,
            create_time AS createTime,
            description AS description
        FROM
            firmware_info
        WHERE
            firmware_type = #{firmwareType,jdbcType=VARCHAR}
            AND hardware_code = #{hardwareCode,jdbcType=VARCHAR}
            AND environment = #{environment,jdbcType=VARCHAR}
            AND version_code = #{versionCode,jdbcType=INTEGER}
    </select>

    <update id="cleanFirmware">
        UPDATE firmware_info
        SET `enable` = 0
        WHERE
            firmware_type = #{firmwareType,jdbcType=VARCHAR}
            AND hardware_code = #{hardwareCode,jdbcType=VARCHAR}
            AND environment = #{environment,jdbcType=VARCHAR}
    </update>

    <update id="enableFirmware">
        UPDATE firmware_info
        SET `enable` = 1
        WHERE
            firmware_type = #{firmwareType,jdbcType=VARCHAR}
            AND hardware_code = #{hardwareCode,jdbcType=VARCHAR}
            AND environment = #{environment,jdbcType=VARCHAR}
            AND version_code = #{versionCode,jdbcType=INTEGER}
    </update>

</mapper>